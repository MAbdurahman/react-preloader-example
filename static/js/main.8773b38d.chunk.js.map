{"version":3,"sources":["img/loader/loading.gif","components/loader/Loader.jsx","components/show-details/ShowDetail.jsx","app/App.js","reportWebVitals.js","index.js"],"names":["ShowDetail","className","src","LoadingGif","alt","props","details","name","company","blog","location","bio","App","state","loading","sleep","milliseconds","Promise","resolve","setTimeout","wait","a","setState","fetchGitHub","fetch","then","res","json","catch","error","console","log","this","Loader","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oQAAe,MAA0B,oC,OCW1BA,MARf,WACC,OACC,qBAAKC,UAAU,gBAAf,SACC,qBAAKC,IAAKC,EAAYC,IAAI,mBC2BdJ,EA/BI,SAAAK,GAAU,IAAD,EACoBA,EAAMC,QAA7CC,EADmB,EACnBA,KAAMC,EADa,EACbA,QAASC,EADI,EACJA,KAAMC,EADF,EACEA,SAAUC,EADZ,EACYA,IACvC,OACC,sBAAKV,UAAU,SAAf,UACC,qBAAKA,UAAU,SAAf,4BACA,gCACC,4CACCM,KAGF,gCACC,+CACCC,KAEF,gCACC,4CACCC,KAGF,gCACC,gDACCC,KAEF,gCACC,2CACCC,SC0BUC,E,4MAhDdC,MAAQ,CAAEC,SAAS,G,EACnBC,MAAQ,SAAAC,GACP,OAAO,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,O,EAEnDI,K,sBAAO,wCAAAC,EAAA,6DAAOL,EAAP,+BAAsB,IAAtB,SACA,EAAKD,MAAMC,GADX,OAEN,EAAKM,SAAS,CACbf,KAAM,oBACNC,QAAS,eACTC,KAAM,yBACNC,SAAU,cACVC,IAAK,6BACLG,SAAS,IARJ,2C,EAWPS,YAAc,WACbC,MAAM,4CACJC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAC,GAAQ,IACPnB,EAAuCmB,EAAvCnB,KAAMC,EAAiCkB,EAAjClB,QAASC,EAAwBiB,EAAxBjB,KAAMC,EAAkBgB,EAAlBhB,SAAUC,EAAQe,EAARf,IACrC,EAAKW,SAAS,CACbf,KAAMA,EACNC,QAASA,EACTC,KAAMA,EACNC,SAAUA,EACVC,IAAKA,EACLG,SAAS,OAGVc,OAAM,SAAAC,GACNC,QAAQC,IAAIF,GACZ,EAAKT,W,uDAGR,WACCY,KAAKZ,KAAK,O,oBAIX,WACC,GAAIY,KAAKnB,MAAMC,QAAS,OAAO,cAACmB,EAAD,IADvB,MAEqCD,KAAKnB,MAC9CP,EAAU,CAAEC,KAHR,EAEFA,KACgBE,KAHd,EAEIA,KACgBD,QAHpB,EAEUA,QACmBE,SAH7B,EAEmBA,SACoBC,IAHvC,EAE6BA,KAGrC,OAAO,cAAC,EAAD,CAAYL,QAASA,Q,GA7CZ4B,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8773b38d.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/loading.4cad5022.gif\";","import React from 'react';\r\nimport LoadingGif from '../../img/loader/loading.gif';\r\n\r\nfunction ShowDetail() {\r\n\treturn (\r\n\t\t<div className='loader center'>\r\n\t\t\t<img src={LoadingGif} alt=\"Loading Gif\"/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default ShowDetail;\r\n","import React from 'react';\r\n\r\nconst ShowDetail = props => {\r\n\tconst { name, company, blog, location, bio } = props.details;\r\n\treturn (\r\n\t\t<div className='center'>\r\n\t\t\t<div className='loaded'>Details Loaded</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Name: </strong>\r\n\t\t\t\t{name}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Company: </strong>\r\n\t\t\t\t{company}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Blog: </strong>\r\n\t\t\t\t{blog}\r\n\t\t\t</div>\r\n\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Location: </strong>\r\n\t\t\t\t{location}\r\n\t\t\t</div>\r\n\t\t\t<div>\r\n\t\t\t\t<strong>Bio: </strong>\r\n\t\t\t\t{bio}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ShowDetail;\r\n","import React, { Component } from 'react';\r\nimport Loader from '../components/loader/Loader';\r\nimport ShowDetail from '../components/show-details/ShowDetail';\r\n\r\nclass App extends Component {\r\n\tstate = { loading: true };\r\n\tsleep = milliseconds => {\r\n\t\treturn new Promise(resolve => setTimeout(resolve, milliseconds));\r\n\t};\r\n\twait = async (milliseconds = 2000) => {\r\n\t\tawait this.sleep(milliseconds);\r\n\t\tthis.setState({\r\n\t\t\tname: 'Mahdi Abdurrahman',\r\n\t\t\tcompany: 'New Horizons',\r\n\t\t\tblog: 'https://duckduckgo.com',\r\n\t\t\tlocation: 'Memphis, TN',\r\n\t\t\tbio: 'Software and Web Developer',\r\n\t\t\tloading: false,\r\n\t\t});\r\n\t};\r\n\tfetchGitHub = () => {\r\n\t\tfetch('https://api.github.com/users/MAbdurahman')\r\n\t\t\t.then(res => res.json())\r\n\t\t\t.then(res => {\r\n\t\t\t\tlet { name, company, blog, location, bio } = res;\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tname: name,\r\n\t\t\t\t\tcompany: company,\r\n\t\t\t\t\tblog: blog,\r\n\t\t\t\t\tlocation: location,\r\n\t\t\t\t\tbio: bio,\r\n\t\t\t\t\tloading: false,\r\n\t\t\t\t});\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t\tthis.wait();\r\n\t\t\t});\r\n\t};\r\n\tcomponentDidMount() {\r\n\t\tthis.wait(2000);\r\n\t\t// this.fetchGitHub();\r\n\t}\r\n\r\n\trender() {\r\n\t\tif (this.state.loading) return <Loader />;\r\n\t\tlet { name, blog, company, location, bio } = this.state;\r\n\t\tlet details = { name, blog, company, location, bio };\r\n\r\n\t\treturn <ShowDetail details={details} />;\r\n\t}\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './app/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}